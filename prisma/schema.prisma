generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                     String        @id @default(cuid())
  nome                   String
  email                  String        @unique
  roles                  Role[]        @default([COLAB])
  senha                  String
  avatar                 String?
  atendimentoAtualizado  Atendimento[] @relation("atendimentoAtualizado")
  atendimentoCriado      Atendimento[] @relation("atendimentoCriado")
  clienteAtualizado      Cliente[]     @relation("clienteAtualizado")
  clienteCriado          Cliente[]     @relation("clienteCriado")
  transportes            Transporte[]
  responsavelAtendimento Atendimento[] @relation("responsavelAtendimento")
}

model Atendimento {
  id              String                @id @default(cuid())
  ordem           Int                   @unique
  titulo          String                @default("titulo")
  descricao       String?
  prazo           DateTime?
  extra           Boolean?
  situacao        SituacaoAtendimento[]
  proximaAtuacao  DateTime?
  criadoEm        DateTime?             @default(now())
  atualizadoEm    DateTime?
  clienteId       String?
  userCriouId     String?
  userAtualizouId String?
  cliente         Cliente?              @relation("atendimentoCliente", fields: [clienteId], references: [id])
  atualizadoPor   User?                 @relation("atendimentoAtualizado", fields: [userAtualizouId], references: [id])
  criadoPor       User?                 @relation("atendimentoCriado", fields: [userCriouId], references: [id])
  evolucao        EvolucaoAtendimento?
  responsavel     User[]                @relation("responsavelAtendimento")
}

model Cliente {
  id                          String        @id @default(cuid())
  tipoCliente                 TipoCliente?
  razaoNome                   String
  nome                        String?
  cnpjCpf                     String?       @unique
  estadoCivilPf               String?
  rgPf                        String?
  dnPf                        DateTime?
  logradouroPj                String?
  numeroLogradouroPj          String?
  bairroPj                    String?
  complementoPj               String?
  cepPj                       String?
  cidadePj                    String?
  ufPj                        String?
  telefonePj                  String?
  nomeResponsavel             String?
  cpfResponsavel              String?
  estadoCivilResponsavel      String?
  rgResponsavel               String?
  dnResponsavel               DateTime?
  logradouroResponsavel       String?
  numeroLogradouroResponsavel String?
  bairroResponsavel           String?
  cepResponsavel              String?
  cidadeResponsavel           String?
  ufResponsavel               String?
  telefoneResponsavel         String?
  email                       String?
  codigoSimples               String?
  codigoEcac                  String?
  pasta                       String?
  criadoEm                    DateTime?     @default(now())
  atualizadoEm                DateTime?
  userCriouId                 String?
  userAtualizouId             String?
  atendimentoCliente          Atendimento[] @relation("atendimentoCliente")
  atualizadoPor               User?         @relation("clienteAtualizado", fields: [userAtualizouId], references: [id])
  criadoPor                   User?         @relation("clienteCriado", fields: [userCriouId], references: [id])
}

model EvolucaoAtendimento {
  id            String                      @id @default(cuid())
  ordem         Int
  atendimentoId String                      @unique
  eventos       EventoEvolucaoAtendimento[]
  atendimento   Atendimento                 @relation(fields: [atendimentoId], references: [id])
}

model EventoEvolucaoAtendimento {
  id                    String                            @id @default(cuid())
  descricao             String
  situacao              SituacaoEventoEvolucaoAtendimento
  dataEvento            DateTime
  evolucaoAtendimentoId String?
  evolucaoAtendimento   EvolucaoAtendimento?              @relation(fields: [evolucaoAtendimentoId], references: [id])
}

model Transporte {
  id              String           @id @default(cuid())
  criadoEm        DateTime?        @default(now())
  atualizadoEm    DateTime?
  empresaId       String           // Alterado de Int para String
  aliquota_icms   Decimal?
  cte             Int?
  peso            Decimal?
  tomadorId       String?          // Alterado de Int? para String?
  val_cte         Decimal?
  val_tonelada    Decimal?
  motoristaId     String?          // Alterado de Int? para String?
  cidade_destino  String?
  cidade_origem   String?
  uf_destino      String?
  uf_origem       String?
  notas           Int[]
  reducao_bc_icms Decimal?
  emissao_cte     DateTime?
  userId          String
  cteComplementar CteComplementar?
  empresa         Empresa          @relation("transporteEmpresa", fields: [empresaId], references: [id])
  motorista       Motorista?       @relation(fields: [motoristaId], references: [id])
  tomador         Tomador?         @relation("transporteTomador", fields: [tomadorId], references: [id])
  user            User             @relation(fields: [userId], references: [id])
}

model CteComplementar {
  id              String     @id @default(cuid())
  cte             Int?
  peso            Decimal?
  val_tonelada    Decimal?
  val_cte         Decimal
  aliquota_icms   Decimal?
  criadoEm        DateTime?  @default(now())
  atualizadoEm    DateTime?
  transporteId    String     @unique
  emissao_cte     DateTime?
  reducao_bc_icms Decimal?
  transporte      Transporte @relation(fields: [transporteId], references: [id])
}

model Empresa {
  id                String     @id @default(cuid())
  razaoNome         String
  cnpjCpf           String?      @unique
  transporteEmpresa Transporte[] @relation("transporteEmpresa")
  motoristas        Motorista[]  @relation("EmpresaToMotorista")
}

model Motorista {
  id          String     @id @default(cuid())
  nome        String
  cpf         String?      @unique
  transportes Transporte[]
  empresas    Empresa[]    @relation("EmpresaToMotorista")
}

model Tomador {
  id                String     @id @default(cuid())
  razaoNome         String
  cnpjCpf           String?      @unique
  transporteTomador Transporte[] @relation("transporteTomador")
}

enum Role {
  ADMIN
  DEV
  COLAB
  FINANCE
}

enum SituacaoAtendimento {
  ENCERRADO
  ANDAMENTO
}

enum TipoCliente {
  PFISICA
  PJURIDICA
}

enum SituacaoEventoEvolucaoAtendimento {
  CONCLUIDO
  ANDAMENTO
}
